pipeline {
    agent any

    environment {
        USER_NAME = "changhoon"
        AWS_ACCOUNT_ID = "882246222011"
        IMAGE_REPO_NAME = "changhoon-ecr-repo"
        DOCKER_IMAGE = "${USER_NAME}-ecr-repo"
        AWS_DEFAULT_REGION = 'ap-northeast-2'
        IMAGE_TAG = "latest"
        REPOSITORY_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}"
        FLASK_SERVER_PRIVATE_IP = "10.0.1.77" 
    }
    
    stages {
        stage('Logging into AWS ECR') {
            steps {
                script {
                    sh "aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"
                }
            }
        }
        
        stage('Building image') {
            steps {
                script {
                    docker.build("${IMAGE_REPO_NAME}:${IMAGE_TAG}", "-f docker/Dockerfile .")
                }
            }
        }
        
        stage('Pushing to ECR') {
            steps {
                script {
                    sh "docker tag ${IMAGE_REPO_NAME}:${IMAGE_TAG} ${REPOSITORY_URI}:${IMAGE_TAG}"
                    sh "docker push ${REPOSITORY_URI}:${IMAGE_TAG}"
                }
            }
        }
        
        stage('Deploy to Flask Server') {
            steps {
                sh """
                    ssh ubuntu@${FLASK_SERVER_PRIVATE_IP} '
                        aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com
                        docker pull ${REPOSITORY_URI}:${IMAGE_TAG}
                        docker stop my-flask-app || true
                        docker rm my-flask-app || true
                        docker run -d --name my-flask-app -p 5000:5000 ${REPOSITORY_URI}:${IMAGE_TAG}
                    '
                """
            }
        }
    }
    
    post {
        always {
            sh 'docker logout'
        }
    }
}
